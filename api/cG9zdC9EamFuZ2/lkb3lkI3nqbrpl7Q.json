{"title":"Django命名空间","date":"2019-01-24T12:33:06.000Z","slug":"Django命名空间","tags":["Django"],"categories":["Python"],"updated":"2019-01-24T12:47:06.407Z","content":"<p>不使用命名空间，且两个APP某条url使用相同的name属性</p>\n<p>app01_urls.py</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 urlpatterns = [</span><br><span class=\"line\">2     url(r&apos;aaa/$&apos;, views.app01_aaa, name=&quot;index&quot;),</span><br><span class=\"line\">3 ]</span><br></pre></td></tr></table></figure>\n<p>app02_urls.py</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 urlpatterns = [</span><br><span class=\"line\">2     url(r&apos;aaa/$&apos;, views.app02_aaa, name=&quot;index&quot;),</span><br><span class=\"line\">3 ]</span><br></pre></td></tr></table></figure>\n<p>各自的函数中同时反解URL</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#app01.views</span><br><span class=\"line\">def aaa(request):</span><br><span class=\"line\">    return  HttpResponse(reverse(&quot;index&quot;))</span><br><span class=\"line\"></span><br><span class=\"line\">#app02.views</span><br><span class=\"line\">def aaa(request):</span><br><span class=\"line\">    return  HttpResponse(reverse(&quot;index&quot;))</span><br></pre></td></tr></table></figure>\n<p>页面显示结果app01.views</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 #app01</span><br><span class=\"line\">2 </span><br><span class=\"line\">3 /app01aaa/</span><br><span class=\"line\">4 </span><br><span class=\"line\">5 </span><br><span class=\"line\">6 #app02</span><br><span class=\"line\">7 </span><br><span class=\"line\">8 /app01aaa/</span><br></pre></td></tr></table></figure>\n<p>总结</p>\n<p>由于name没有作用域，Django在反解URL时，会在项目全局顺序搜索，当查找到第一个name指定URL时，立即返回</p>\n<p>我们在开发项目时，会经常使用name属性反解出URL，当不小心定义相同的name时，可能会导致URL反解错误，为了避免这种事情发生，引入了命名空间</p>\n<p>解决方法：</p>\n<p>使用Django提供namespace参数</p>\n<p>使用命名空间</p>\n<p>app.urls添加变量  或者直接在对应的include中再加一个对应的参数,例如：’app01’</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app_name = &apos;app01&apos;</span><br></pre></td></tr></table></figure>\n<p>project_urls.py</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.conf.urls import url,include</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(r&apos;^aaa&apos;, include(&quot;app01.urls&quot;),namespace=&apos;aaa&apos;)),</span><br><span class=\"line\">    url(r&apos;^bbb&apos;, include(&quot;app02.urls&quot;),namespace=&apos;bbb&apos;)),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>app01_urls.py</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.conf.urls import url</span><br><span class=\"line\">from app01 import views</span><br><span class=\"line\"></span><br><span class=\"line\">app_name = &quot;app01&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(r&apos;aaa/$&apos;, views.aaa, name=&quot;index&quot;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>app02_urls.py</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.conf.urls import url</span><br><span class=\"line\">from app01 import views</span><br><span class=\"line\"></span><br><span class=\"line\">app_name = &quot;app02&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(r&apos;aaa/$&apos;, views.aaa, name=&quot;index&quot;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>app01_views.py</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def aaa(request):</span><br><span class=\"line\">    return HttpResponse(reverse(&quot;app01:index&quot;))</span><br></pre></td></tr></table></figure>\n<p>app02_views.py</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def aaa(request):</span><br><span class=\"line\">    return HttpResponse(reverse(&quot;app02:index&quot;))</span><br></pre></td></tr></table></figure>\n<p>验证</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 1 #http://127.0.0.1/aaa/aaa/</span><br><span class=\"line\"> 2 </span><br><span class=\"line\"> 3 # 结果：</span><br><span class=\"line\"> 4 # /aaaaaa/</span><br><span class=\"line\"> 5 </span><br><span class=\"line\"> 6 </span><br><span class=\"line\"> 7 #http://127.0.0.1/bbb/aaa/</span><br><span class=\"line\"> 8 </span><br><span class=\"line\"> 9 # 结果：</span><br><span class=\"line\">10 # /bbbaaa/</span><br></pre></td></tr></table></figure>","next":{"title":"mysql修改字段","slug":"mysql修改字段"},"link":"http://yoursite.com/post/Django命名空间/"}