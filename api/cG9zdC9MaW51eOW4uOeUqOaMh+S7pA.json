{"title":"Linux常用指令","date":"2018-12-20T07:53:37.000Z","slug":"Linux常用指令","categories":["Linux"],"updated":"2018-12-23T12:35:50.109Z","content":"<h1 id=\"日常操作\"><a href=\"#日常操作\" class=\"headerlink\" title=\"日常操作\"></a>日常操作</h1><p>1.cd指令     - 进入指定文件夹</p>\n<p>cd  目录     - 进入指定目录(也可以是文件夹对应的路径)</p>\n<p>​               ~相对路径 — 绝对路径</p>\n<p>cd  ..     - 返回上层目录</p>\n<p>cd  ~ - 回到根目录</p>\n<p>2.ls指令      - 查看当前目录中的内容</p>\n<p>ls</p>\n<p>ls -l/-lh        -查看当前目录中内容的权限</p>\n<p>ls -a                -隐藏文件也一起显示</p>\n<p>ls -R            - 递归显示所有内容</p>\n<p>ls -S/-t              - 按大小/时间排序</p>\n<p>3.pwd指令       - 显示当前完整目录</p>\n<p>pwd</p>\n<p>4.文件操作指令</p>\n<p>touch  文件名      -新建文件</p>\n<p>cat 文件名           - 查看文件内容</p>\n<p>rm 文件名        - 删除文件</p>\n<p>rm - r 目录       - 删除文件夹</p>\n<p>cp  文件名1  文件名2  - 将文件1中的内容拷贝到文件2中</p>\n<p>cp -r  文件名/目录名   目录2    - 将文件/目录拷贝到目录2中</p>\n<p>mv     文件名1  文件名2    -将文件1中的内容移动到文件2中 ,并且删除文件1（文件重命名）l</p>\n<p>mv     文件名1  文件目录  - 将文件1移动到指定目录中  mv </p>\n<p>(注意：cp/mv/rm后面可以跟： -i询问  -f强制  -n不覆盖)</p>\n<p>mkdir  目录名     -新建文件夹</p>\n<p>mkdir -p a/b/c        - 按层级创建a,b,c三个文件夹</p>\n<p>mkdir -p a/{b,c}/{d,e,f} -同一层级创建多个，a下面有b,c;b,c下面都有d,e,f</p>\n<p>rmdir  目录名      -删除指定空目录</p>\n<p>5.history      - 显示历史指令记录</p>\n<p>.bashrc 配置显示时间：export  HISTTIMEFORMAT=”[%y‐%m‐%d_%T] “ </p>\n<p>修改bashrc 后使其生效:  source  ~/.bashrc 或 . .bashrc   </p>\n<p>6.链接</p>\n<p>ln -s 源路径  目标路径     -给源路径对应的文件在目标路径下创建一个软链接(可以看成是快捷键)</p>\n<p>ln 源路径  目标路径              -给源路径对应的文件在目标路径下创建一个硬链接</p>\n<p>7.快捷键</p>\n<p>ctr + f          - 前进一个字符</p>\n<p>ctr + b          - 后退一个字符</p>\n<p>ctr + a          - 回到行首</p>\n<p>ctr + e         - 回到行尾</p>\n<p>ctr + w         - 向左删除一个单词</p>\n<p>ctr + u          - 向左删除全部</p>\n<p>ctr + k          - 向右删除全部</p>\n<p>ctr + y          - 粘贴上次删除的内容</p>\n<p>ctr + l      - 清屏  </p>\n<h1 id=\"进程相关指令\"><a href=\"#进程相关指令\" class=\"headerlink\" title=\"进程相关指令\"></a>进程相关指令</h1><p>1.ps指令</p>\n<p>ps                          - 进程状态</p>\n<p>ps -aux  或者  psex               - 查看进程</p>\n<p>ps -aux|grep 进程名       - 查看指定进程</p>\n<p>psgrep  进程名</p>\n<p>2.top指令</p>\n<p>top                             - 动态监控进程</p>\n<p>top  -p PID1,PID2,….        - 动态监控指定进程</p>\n<p>3.free指令</p>\n<p>free -单位                        - 以指定单位查看内存</p>\n<p>4.kill指令</p>\n<p>kill 进程号                     - 杀死指定的进程</p>\n<p>kill -1/-9/-15                   - -1(HUP)不间断重启，-9(KILL)强制杀死进程,-15(TERM)正常终止进程  </p>\n<p>pkill  进程名                 -按名字处理进程</p>\n<p>killall 进程名                 - 处理名字匹配的进程</p>\n<p>uptime                        - 查看系统状态</p>\n<h1 id=\"权限管理\"><a href=\"#权限管理\" class=\"headerlink\" title=\"权限管理\"></a>权限管理</h1><p>1.user和group  一个系统可以有多个用户和多个分组，一个分组可以有多个用户，一个用户可以在不同的分组中(多对多)</p>\n<p>users                              查看当前用户</p>\n<p>groups                            查看当前分组</p>\n<p>groupadd  分组名                     添加分组</p>\n<p>groupdel 分组名                       删除分组</p>\n<p>useradd ‐G 分组列表 ‐m ‐s /bin/bash 用户名       - 创建一个用户添加到指定的分组中（在home中创建指定的文件夹）</p>\n<p>userdel 用户名                            删除用户</p>\n<p>usermod -G 分组列表 用户名                     - 修改分组</p>\n<p>passwd 用户名 修改密码</p>\n<p>sudo                                               - 以管理员执行其他程序</p>\n<p>su - 用户名                                    - 切换用户身份</p>\n<ul>\n<li>以管理员执行其他程序<br>注意： a.在ubuntu需要将用户添加到sudo分组中，才能使用sudo以管理员的身份执行程序<br>​          b.在centOS中需要先执行visudo指令进入sudoers文件中在指定的位置添加内容</li>\n</ul>\n<p># Allow root to run any commands anywhere<br>root    ALL=(ALL)       ALL<br>xiaoming ALL=(ALL)      ALL (自己添加的，xiaoming是用户名)<br>2.chmod<br>chmod    权限值   文件 - 修改指定文件的权限<br>chmod    [a,u,g,o][+,-][r,w,x]  文件 - 为指定文件，给所有用户添加相应的权限<br>   (a:所有，u:自己，g:同组，o:其他；<br>+：添加， -: 取消；<br>r:读，w:写，x:执行)<br>chown  用户名  文件</p>\n<ul>\n<li>改变文件所有者<br>(权限制是三组二进制值)<br>self      group    other<br>rwx      rwx        rwx<br>111       101<br>001            - 自己读写可执行，同一分组的只读可执行，其他的只可执行<br>110      100        000</li>\n</ul>\n<h1 id=\"日志管理\"><a href=\"#日志管理\" class=\"headerlink\" title=\"日志管理\"></a>日志管理</h1><p>1.cat<br>指令<br>cat    文件 - 查看文件内容<br>2.查看部分<br>head -n  N  文件 - 查看前N行内容<br>tail  -n  N    文件  - 查看后N行内容<br>3.<br>less [-N]  文件</p>\n<ul>\n<li>按 j 向下</li>\n<li>按 k 向上</li>\n<li>按 f 向下翻屏</li>\n<li>按 b 向上翻屏</li>\n<li>按 g 到全文开头</li>\n<li>按 G 到全文结尾</li>\n<li>按 Q 退出<br>more [-N]  文件    </li>\n<li>和less差不多，这个是尽可能多，less是尽可能少的加载<br>4.处理<br>sort   - 排序  (cat 文件 |sort)<br>uniq - 去重  (cat 文件 |uniq) - 只会去重相邻的重复是数据，一般结合sort一起使用:  |sort|uniq<br>awk ‘{print \\$N}’ - 打印第N列的内容(netstat -natp|awk ‘{print $4}’)<br>history |awk ‘{print $4}’ |sort |uniq ‐c | sort ‐rnk 1 | head ‐n 3    -获取历史指令中，使用最频繁的三个指令<br>5.统计<br>wc -c(字符)/-w(单词)/-l(行)  文件<br>6.查找<br>grep  查看对象 目录/文件  参数<br>参数：<br>-i 忽略大小写<br>-n   显示行标号<br>-E   通过正则表达式匹配<br>-v   忽略字段<br>-rn  递归查找目录，并打印行号<br>—include=‘<em>.py’ 仅包含 py文件<br>—exclude=‘</em>.js’ 不包含 js 文件<br>例如：<br>grep you bb.txt<br>grep you bb.txt -i<br>grep you bb.txt -i -n<br>grep -E ‘[0-9]+’ bb.txt<br>find    DIR -name  ‘<em>.xxx’ 找到目录下所有名字匹配的文件<br>找出文件夹<br>例：find /tmp/xyz/ ‐perm 0642 ‐size +10k ‐size ‐100k ‐name ‘</em>.log’<br>which  指令 - 精确查找当前可执行的指令<br>whereis  指令 - 查找所有匹配的命令<br>四、网络管理<br>ifconfig     查看网卡状态<br>netstat   -natp - 查看网络连接状态<br>netstat   -natp|grep  端口号</li>\n<li>查看指定端口的网络连接状态<br>ping  地址<br>ping  -i   时间 地址<br>ping  -c  次数    地址<br>telnet  ip地址 端口  - 查看远程主机网络连接状况<br>dig 地址 - 查看DNS<br>wget  地址 - 下载</li>\n</ul>\n","prev":{"title":"markdown","slug":"markdown"},"link":"http://yoursite.com/post/Linux常用指令/","toc":[{"title":"日常操作","id":"日常操作","index":"1"},{"title":"进程相关指令","id":"进程相关指令","index":"2"},{"title":"权限管理","id":"权限管理","index":"3"},{"title":"日志管理","id":"日志管理","index":"4"}]}